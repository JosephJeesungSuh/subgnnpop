# export CUDA_VISIBLE_DEVICES=1
# export SIBYL_FORCE_RECACHE=1

# python train_perwave.py \
#     encoder.encoding.indiv="fixed" \
#     encoder.encoding.subgroup="one_hot" \
#     encoder.encoding.question="one_hot" \
#     encoder.gnn_input_embed_dim.indiv=8 \
#     encoder.gnn_input_embed_dim.subgroup=128 \
#     encoder.gnn_input_embed_dim.question=128 \
#     decoder.indiv_question.decoder_arch="mlp" \
#     decoder.indiv_question.embed_dim=[128,128] \
#     decoder.indiv_question.learnable_temp=true \
#     decoder.subgroup_question.decoder_arch="mlp" \
#     decoder.subgroup_question.embed_dim=[128,128] \
#     decoder.subgroup_question.learnable_temp=true \
#     gnn.gnn_arch="rgcn" \
#     gnn.gnn_output_embed_dim.indiv=128 \
#     gnn.gnn_output_embed_dim.subgroup=128 \
#     gnn.gnn_output_embed_dim.question=128 \
#     gnn.gnn_hidden_dims.indiv=[256,256] \
#     gnn.gnn_hidden_dims.subgroup=[256,256] \
#     gnn.gnn_hidden_dims.question=[256,256] \
#     gnn.gnn_p_dropout=0.5 \
#     gnn.norm_type="layer" \
#     gnn.aggr_method="mean" \
#     dataset.qkeypath="opinionqa_qkeys.json" \
#     dataset.qstringpath="opinionqa_qstrings.json" \
#     dataset.dist_datapath="opinionqa.jsonl" \
#     dataset.input_wave_number=[26,29,32,34,36,41,42,43,45,49,50,54,82,92] \
#     dataset.frozen_embeddingpath="/nas/ucb/jjssuh/projs/sibyl/data/llm_embeddings/new_embeddings/opinionqa_qwoptions_embedding_llama2_7b_layer_all_eos_False.pt" \
#     dataset.target_layer=20 \
#     dataset.filtering.min_questions_per_indiv=30 \
#     dataset.filtering.n_indiv_sample_per_wave=100000 \
#     dataset.use_22_subgroups=false \
#     dataset.node_types=["indiv","question","subgroup"] \
#     split_info.transductive.test.indiv_question=0.0 \
#     split_info.transductive.test.intact_indiv=0.0 \
#     split_info.transductive.val.indiv_question=0.6 \
#     split_info.transductive.val.intact_indiv=0.4 \
#     split_info.transductive.train.indiv_question=0.36 \
#     split_info.inductive.test.indiv=0.0 \
#     split_info.inductive.test.question=0.0 \
#     split_info.inductive.val.indiv=0.0 \
#     split_info.inductive.val.question=0.0 \
#     split_info.inductive.train.indiv=0.0 \
#     split_info.inductive.train.question=0.0 \
#     split_info.graphsaint.n_sample=1 \
#     split_info.graphsaint.fraction=1.0 \
#     training.learning_rate.encoder.indiv=1e-2 \
#     training.learning_rate.encoder.subgroup=1e-2 \
#     training.learning_rate.encoder.question=1e-3 \
#     training.learning_rate.decoder.indiv_question=1e-2 \
#     training.learning_rate.decoder.subgroup_question=1e-2 \
#     training.learning_rate.graphnn=1e-2 \
#     training.weight_decay.encoder.question=1e-4 \
#     training.reduction="weighted" \
#     training.eval_every=1 \
#     training.label_smoothing_alpha=0.85 \
#     training.max_grad_norm=0.1 \
#     training.n_epochs=2000 \
#     training.distribution_loss_weight=0.0 \
#     training.inductive_loss_weight=0.0 \
#     experiment.save_model=true \
#     experiment.save_embedding=false \
#     experiment.use_logger=false \
#     experiment.verbose=false \
#     experiment.save_data=false


export CUDA_VISIBLE_DEVICES=1
export SIBYL_FORCE_RECACHE=1

python train_perwave.py \
    encoder.encoding.indiv="trait" \
    encoder.encoding.subgroup="one_hot" \
    encoder.encoding.question="one_hot" \
    encoder.gnn_input_embed_dim.indiv=8 \
    encoder.gnn_input_embed_dim.subgroup=128 \
    encoder.gnn_input_embed_dim.question=128 \
    decoder.indiv_question.decoder_arch="fixed" \
    decoder.indiv_question.embed_dim=[128,128] \
    decoder.indiv_question.learnable_temp=true \
    decoder.subgroup_question.decoder_arch="fixed" \
    decoder.subgroup_question.embed_dim=[128,128] \
    decoder.subgroup_question.learnable_temp=true \
    gnn.gnn_arch="rgcn" \
    gnn.gnn_output_embed_dim.indiv=128 \
    gnn.gnn_output_embed_dim.subgroup=128 \
    gnn.gnn_output_embed_dim.question=128 \
    gnn.gnn_num_layers=3 \
    gnn.gnn_hidden_dims.indiv=[128,128,128] \
    gnn.gnn_hidden_dims.subgroup=[128,128,128] \
    gnn.gnn_hidden_dims.question=[128,128,128] \
    gnn.gnn_p_dropout=0.5 \
    gnn.norm_type="layer" \
    gnn.aggr_method="mean" \
    dataset.input_wave_number=[26,29,32,34,36,41,42,43,45,49,50,54,82,92] \
    dataset.qkeypath="opinionqa_qkeys.json" \
    dataset.qstringpath="opinionqa_qstrings.json" \
    dataset.dist_datapath="opinionqa.jsonl" \
    dataset.frozen_embeddingpath="/nas/ucb/jjssuh/projs/sibyl/data/llm_embeddings/new_embeddings/opinionqa_qwoptions_embedding_llama2_7b_layer_all_eos_False.pt" \
    dataset.target_layer=20 \
    dataset.filtering.min_questions_per_indiv=30 \
    dataset.filtering.n_indiv_sample_per_wave=100000 \
    dataset.use_22_subgroups=false \
    dataset.node_types=["indiv","question","subgroup"] \
    split_info.transductive.test.indiv_question=0.0 \
    split_info.transductive.test.intact_indiv=0.0 \
    split_info.transductive.val.indiv_question=0.0 \
    split_info.transductive.val.intact_indiv=0.0 \
    split_info.transductive.train.indiv_question=0.0 \
    split_info.inductive.test.indiv=0.6 \
    split_info.inductive.test.question=0.0 \
    split_info.inductive.val.indiv=0.125 \
    split_info.inductive.val.question=0.0 \
    split_info.inductive.train.indiv=0.2 \
    split_info.inductive.train.question=0.0 \
    split_info.graphsaint.n_sample=5 \
    split_info.graphsaint.fraction=1.0 \
    training.learning_rate.encoder.indiv=5e-3 \
    training.learning_rate.encoder.subgroup=5e-3 \
    training.learning_rate.encoder.question=1e-3 \
    training.learning_rate.decoder.indiv_question=5e-3 \
    training.learning_rate.decoder.subgroup_question=5e-3 \
    training.learning_rate.graphnn=5e-3 \
    training.weight_decay.encoder.question=1e-4 \
    training.reduction="weighted" \
    training.eval_every=1 \
    training.label_smoothing_alpha=0.85 \
    training.max_grad_norm=0.1 \
    training.n_epochs=400 \
    training.distribution_loss_weight=0.5 \
    training.inductive_loss_weight=2.0 \
    experiment.save_model=true \
    experiment.save_embedding=false \
    experiment.use_logger=true \
    experiment.verbose=false \
    experiment.save_data=false


# export CUDA_VISIBLE_DEVICES=1
# export SIBYL_FORCE_RECACHE=1

# python train_perwave.py \
#     encoder.encoding.indiv="fixed" \
#     encoder.encoding.subgroup="one_hot" \
#     encoder.encoding.question="frozen_llm_projection_linear" \
#     encoder.gnn_input_embed_dim.indiv=16 \
#     encoder.gnn_input_embed_dim.subgroup=128 \
#     encoder.gnn_input_embed_dim.question=128 \
#     decoder.indiv_question.decoder_arch="mlp" \
#     decoder.indiv_question.embed_dim=[128,128] \
#     decoder.indiv_question.learnable_temp=true \
#     decoder.subgroup_question.decoder_arch="mlp" \
#     decoder.subgroup_question.embed_dim=[128,128] \
#     decoder.subgroup_question.learnable_temp=true \
#     gnn.gnn_arch="rgcn" \
#     gnn.gnn_output_embed_dim.indiv=128 \
#     gnn.gnn_output_embed_dim.subgroup=128 \
#     gnn.gnn_output_embed_dim.question=128 \
#     gnn.gnn_num_layers=2 \
#     gnn.gnn_hidden_dims.indiv=[256,256] \
#     gnn.gnn_hidden_dims.subgroup=[256,256] \
#     gnn.gnn_hidden_dims.question=[256,256] \
#     gnn.gnn_p_dropout=0.5 \
#     gnn.norm_type="layer" \
#     gnn.hetero_aggr_method="mean" \
#     dataset.input_wave_number=[26,41] \
#     dataset.qkeypath="opinionqa_qkeys.json" \
#     dataset.qstringpath="opinionqa_qstrings.json" \
#     dataset.dist_datapath="opinionqa.jsonl" \
#     dataset.frozen_embeddingpath="/nas/ucb/jjssuh/projs/sibyl/data/llm_embeddings/new_embeddings/opinionqa_qwoptions_embedding_mistral_7b_layer_all_eos_False.pt" \
#     dataset.target_layer=20 \
#     dataset.filtering.min_questions_per_indiv=30 \
#     dataset.filtering.n_indiv_sample_per_wave=100000 \
#     dataset.use_22_subgroups=false \
#     dataset.node_types=["indiv","question","subgroup"] \
#     split_info.transductive.val.indiv_question=0.0 \
#     split_info.transductive.val.intact_indiv=0.0 \
#     split_info.transductive.train.indiv_question=0.0 \
#     split_info.inductive.test.indiv=0.00 \
#     split_info.inductive.test.question=0.20 \
#     split_info.inductive.val.indiv=0.00 \
#     split_info.inductive.val.question=0.20 \
#     split_info.inductive.train.indiv=0.00 \
#     split_info.inductive.train.question=0.20 \
#     split_info.graphsaint.n_sample=10 \
#     split_info.graphsaint.fraction=1.0 \
#     training.learning_rate.encoder.indiv=5e-3 \
#     training.learning_rate.encoder.subgroup=5e-3 \
#     training.learning_rate.encoder.question=1e-3 \
#     training.learning_rate.decoder.indiv_question=5e-3 \
#     training.learning_rate.decoder.subgroup_question=5e-3 \
#     training.learning_rate.graphnn=5e-3 \
#     training.weight_decay.encoder.question=1e-4 \
#     training.reduction="weighted" \
#     training.eval_every=1 \
#     training.label_smoothing_alpha=0.85 \
#     training.max_grad_norm=0.1 \
#     training.n_epochs=1000 \
#     training.distribution_loss_weight=1.0 \
#     training.inductive_loss_weight=2.0 \
#     experiment.save_model=true \
#     experiment.save_embedding=false \
#     experiment.use_logger=false \
#     experiment.verbose=false \
#     experiment.save_data=false